on:
  push:
    branches:
      - master
      - 'RELEASE_*'
  pull_request:
    branches:
      - master

name: R-CMD-check-bioc

jobs:
  R-CMD-check-bioc:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (bioc-${{ matrix.config.bioc }})

    strategy:
      fail-fast: false
      - name: Run on Bioconductor devel
        if: github.ref == 'refs/heads/master'
        matrix:
          config:
            - {os: ubuntu-latest, image: 'bioconductor/bioconductor_docker:devel', bioc: 'devel'}
      - name: Run on Bioconductor release
        if: contains(github.ref, 'RELEASE_')
        matrix:
          config:
            ## I don't know how to get the last part out of github.ref to set the image dynamically
            - {os: ubuntu-latest, image: 'bioconductor/bioconductor_docker:release_3_10', bioc: 'release'}
            # - {os: ubuntu-16.04, r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      # ## I'm not sure if I'll need the RSPM later
      # RSPM: ${{ matrix.config.rspm }}
      # ## This is the output on docker:
      # > .libPaths()
      # [1] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
      R_LIBS_USER: /usr/local/lib/R/site-library
      CI: true
      TZ: UTZ
      NOT_CRAN: true

    container:
      image: ${{ matrix.config.image }}

    steps:
      - uses: actions/checkout@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os == 'Linux'
        uses: actions/cache@v1
        with:
          path: /usr/local/lib/R/site-library
          key: ${{ runner.os }}-bioc-${{ matrix.config.bioc }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-bioc-${{ matrix.config.bioc }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          if (!requireNamespace("BiocManager", quietly = TRUE))
              install.packages("BiocManager")
          BiocManager::install('BiocCheck')
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          rcmdcheck::rcmdcheck(
              args = c("--no-build-vignettes", "--no-manual", "--timings"),
              build_args = c("--no-manual", "--no-resave-data"),
              error_on = "warning",
              check_dir = "check"
          )
        shell: Rscript {0}

      - name: BiocCheck
        shell: R CMD BiocCheck check/*.tar.gz

      - name: Install covr and pkgdown
        if: github.ref == 'refs/heads/master'
        run: |
          if (!requireNamespace("covr", quietly = TRUE))
              remotes::install_cran("covr")
          if (!requireNamespace("pkgdown", quietly = TRUE))
              remotes::install_dev("pkgdown")
        shell: Rscript {0}

      - name: Install package
        if: github.ref == 'refs/heads/master'
        run: R CMD INSTALL .

      - name: Deploy package
        if: github.ref == 'refs/heads/master'
        run: |
          pkgdown::deploy_to_branch(new_process = FALSE)
        shell: Rscript {0}

      - name: Test coverage
        if: github.ref == 'refs/heads/master'
        run: |
          covr::codecov()
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-bioc-${{ matrix.config.bioc }}-results
          path: check
